!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("Bacon"),require("jQuery"));else if("function"==typeof define&&define.amd)define(["Bacon","jQuery"],e);else{var n="object"==typeof exports?e(require("Bacon"),require("jQuery")):e(t.Bacon,t.jQuery);for(var r in n)("object"==typeof exports?exports:t)[r]=n[r]}}(this,function(t,e){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";var r=n(2),o=n(3),u=n(4),c=n(5),i=n(6),a=n(1);a.Browser={Window:r,Mouse:o,Keyboard:u,Touch:c,Gamepad:i}},function(e){e.exports=t},function(t,e,n){"use strict";var r=n(7),o=n(1),u=n(8).constantly,c=r(window);if(window.history&&window.history.pushState)try{throw void 0}catch(i){i={},["pushState","replaceState"].forEach(function(t){i[t]=window.history[t],window.history[t]=function(e){var n=i[t].apply(this,arguments);return c.trigger("___bacon-browser-state___",[e]),n}})}var a=u(c.asEventStream("resize")),f=u(c.asEventStream("hashchanged")),s=u(c.asEventStream("popstate")),b=u(c.asEventStream("___bacon-browser-state___",function(t,e){return e}).merge(s().map(".originalEvent.state"))),j=function(){return f().map(function(){return window.location.hash}).toProperty(window.location.hash)},p=function(){return f().merge(b()).map(function(){return window.location}).toProperty(window.location)},g=function(){return b().toProperty()},d=function(){return a().map(function(){return{width:c.outerWidth(),height:c.outerHeight()}}).toProperty({width:c.outerWidth(),height:c.outerHeight()})},m=function(){return d().map(".height")},w=function(){return d().map(".width")},y=u(o.fromBinder(function(t){function e(){n=window.requestAnimationFrame(function(n){t(n),r||e()})}var n,r=!1;return e(),function(){r=!0,n&&window.cancelAnimationFrame(n)}}));t.exports={get resize(){return a},get hashchanged(){return f},get popstate(){return s},get statechanged(){return b},get hash(){return j},get location(){return p},get state(){return g},get dimensions(){return d},get height(){return m},get width(){return w},get animationFrames(){return y},__esModule:!0}},function(t,e,n){"use strict";function r(t){var e=o(document).asEventStream(t);return function(n){return n?o(n).asEventStream(t):e}}var o=n(7);n(1);var u=r("mousemove"),c=r("mouseup"),i=r("mousedown"),a=r("click"),f=function(t){return a(t).map(function(e){return{x:t?e.offsetX:e.pageX,y:t?e.offsetY:e.pageY}})},s=function(t){return b(t).diff(null,function(t,e){return t?{x:e.x-t.x,y:e.y-t.y}:{x:0,y:0}}).toEventStream()},b=function(t){return u(t).map(function(e){return{x:t?e.offsetX:e.pageX,y:t?e.offsetY:e.pageY}}).toProperty()},j=function(t,e){return c(t).map(!0).merge(i(e).map(!1)).toProperty()},p=function(t,e){return j(e,t).not()};t.exports={get mousemove(){return u},get mouseup(){return c},get mousedown(){return i},get click(){return a},get clicks(){return f},get deltas(){return s},get position(){return b},get isUp(){return j},get isDown(){return p},__esModule:!0}},function(t,e,n){"use strict";n(7);n(1)},function(t,e,n){"use strict";n(7);n(1)},function(t,e,n){"use strict";var r=n(7),o=n(2).animationFrames,u=n(8).constantly;n(1);var c=r(window),i=navigator.getGamepads||navigator.webkitGetGamepads||navigator.mozGetGamepads||u([]),a=function(){return i.call(navigator)},f=function(t){return a()[t.gamepad.index]},s=u(c.asEventStream("gamepadconnected")),b=u(c.asEventStream("gamepaddisconnected")),j=u(s().map(f)),p=u(b().map(f)),g=function(){return s().merge(b()).map(a).toProperty(a())},d=function(t){return l().map(function(){return a()[t.id].buttons}).toProperty(a()[t.id].buttons)},m=function(t,e,n){return d(t).map("."+e+"."+(n?"value":"pressed"))},w=function(t,e){return m(e).skipDuplicates().filter(function(t){return t})},y=function(t){return l().map(function(){return a()[t.id].axes}).toProperty(a()[t.id].axes)},O=function(t){return y().map("."+t)},h=function(t,e){return O(e).skipDuplicates()},l=u(o());t.exports={get gamepadconnected(){return s},get gamepaddisconnected(){return b},get connected(){return j},get disconnected(){return p},get gamepads(){return g},get buttons(){return d},get button(){return m},get buttonpressed(){return w},get axes(){return y},get axis(){return O},get axismoved(){return h},get sampler(){return l},__esModule:!0}},function(t){t.exports=e},function(t){"use strict";function e(t){return function(){return t}}t.exports={get constantly(){return e},__esModule:!0}}])});
//# sourceMappingURL=bacon-browser.min.js.map